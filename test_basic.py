#!/usr/bin/env python
"""
Test basic Django functionality
"""

import os
import sys
import django
from pathlib import Path

print("üß™ TESTING BASIC DJANGO FUNCTIONALITY")
print("=" * 50)

# Add the project directory to Python path
project_dir = Path(__file__).parent
sys.path.insert(0, str(project_dir))

# Set up Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'std_portal.production')

try:
    print("1. Importing Django...")
    import django
    print(f"‚úÖ Django version: {django.get_version()}")
    
    print("\n2. Setting up Django...")
    django.setup()
    print("‚úÖ Django setup successful")
    
    print("\n3. Testing basic imports...")
    from django.conf import settings
    print("‚úÖ Settings imported")
    
    from django.contrib.auth.models import User
    print("‚úÖ User model imported")
    
    from django.db import connection
    print("‚úÖ Database connection imported")
    
    print("\n4. Testing database...")
    with connection.cursor() as cursor:
        cursor.execute("SELECT 1")
        result = cursor.fetchone()
        print(f"‚úÖ Database query: {result}")
    
    print("\n5. Testing User model...")
    user_count = User.objects.count()
    print(f"‚úÖ User count: {user_count}")
    
    print("\n6. Testing admin user creation...")
    if not User.objects.filter(username='admin').exists():
        admin = User.objects.create_superuser(
            username='admin',
            email='admin@test.com',
            password='admin123'
        )
        print(f"‚úÖ Admin user created: {admin.username}")
    else:
        admin = User.objects.get(username='admin')
        print(f"‚úÖ Admin user exists: {admin.username}")
    
    print("\n7. Testing password...")
    if admin.check_password('admin123'):
        print("‚úÖ Password verification: SUCCESS!")
    else:
        print("‚ùå Password verification: FAILED!")
    
    print("\nüéâ ALL BASIC TESTS PASSED!")
    print("The Django app should work fine!")
    
except Exception as e:
    print(f"\nüí• ERROR: {e}")
    import traceback
    traceback.print_exc()
    
    print("\nüîç DETAILED ERROR ANALYSIS:")
    print(f"Error type: {type(e).__name__}")
    print(f"Error message: {str(e)}")
    
    # Check if it's a database issue
    if "database" in str(e).lower() or "connection" in str(e).lower():
        print("‚ùå DATABASE CONNECTION ISSUE")
    elif "import" in str(e).lower() or "module" in str(e).lower():
        print("‚ùå IMPORT/MODULE ISSUE")
    elif "settings" in str(e).lower():
        print("‚ùå SETTINGS CONFIGURATION ISSUE")
    else:
        print("‚ùå UNKNOWN ISSUE")

if __name__ == "__main__":
    print("\nTest complete!")

